complete
?complete
??Complete
tibble(R = 1e-7, muAP = 1e-4, N = 10000, m = 0.001)
library(tidyverse); tibble(R = 1e-7, muAP = 1e-4, N = 10000, m = 0.001)
library(tidyverse); tibble(R = 1e-7, muAP = 1e-4, N = 10000, m = 0.001, phi = 0.5, muCD = 1e-8, sAP=c("c(-0.0625,0,0.0625)","c(-0.0833,0,0.0833)"))
library(tidyverse); tibble(R = 1e-7, muAP = 1e-4, N = 10000, m = 0.001, phi = 0.5, muCD = 1e-8, sAP=c("c(-0.0625,0,0.0625)","c(-0.0833,0,0.0833)")) %>% complete()
library(tidyverse); tibble(R = 1e-7, muAP = 1e-4, N = c(1000,10000), m = 0.001, phi = 0.5, muCD = 1e-8, sAP=c("c(-0.0625,0,0.0625)","c(-0.0833,0,0.0833)")) %>% complete()
library(tidyverse); tibble(R = 1e-7, muAP = 1e-4, N = c(1000,10000), m = 0.001, phi = 0.5, muCD = 1e-8, sAP=c("c(-0.0625,0,0.0625)","c(-0.0833,0,0.0833)")) %>% complete()
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df
?expand.grid
?expand_grid
parameters <- list(
R = 1e-7,
muAP = 1e-4,
N = c(1000,10000),
m = 0.001,
phi = 0.5,
muCD = 1e-8,
sAP = c(0.0625,0.0833,0.1,0.1666,0.25,0.5),
r = 0.000001,
sCD = -m,
outputEveryNGenerations = 5000
)
parameters <- list(
+ R = 1e-7,
+ muAP = 1e-4,
+ N = c(1000,10000),
+ m = 0.001,
+ phi = 0.5,
+ muCD = 1e-8,
+ sAP = c(0.0625,0.0833,0.1,0.1666,0.25,0.5),
+ r = 0.000001,
+ sCD = -m,
+ outputEveryNGenerations = 5000
+ )
parameters <- list(
R = 1e-7,
muAP = 1e-4,
N = c(1000,10000),
m = 0.001,
phi = 0.5,
muCD = 1e-8,
sAP = c(0.0625,0.0833,0.1,0.1666,0.25,0.5),
r = 0.000001,
sCD = -0.001,
outputEveryNGenerations = 5000
)
parameters
parameters %>% expand_grid()
parameters %>% as_data_frame()
parameters %>% as_tibble()
parameters %>% expand_grid()
parameters %>% expand_grid() %>% as_tibble()
parameters %>% expand.grid()
parameters %>% expand.grid() %>% as_tibble()
library(glue)
glue_data("klsjlkdfs", "klsjdflksdj")
parameters %>% expand.grid() %>% as_tibble()
parameters %<>% expand.grid() %>% as_tibble()
parameters
glue_data(parameters, "-d {R}=")
glue_data(parameters, "-d {1}=")
glue_data(parameters, "-d {!1}=")
glue_data(parameters, "-d {!!1}=")
glue_data(parameters, "-d {!!!1}=")
glue_data(parameters, "-d {!!! 1}=")
glue_data(parameters, "-d {`!1`}=")
glue_data(parameters, "-d {.!1}=")
glue_data(parameters, "-d {R}=")
glue_data(parameters, "-d R={R}")
glue_data(parameters, "-d R={R}\n")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", sep = "\n")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", sep = " \n")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", sep = " ")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", .sep = " ")
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", .sep = "\n")
parameters
parameters %<>% mutate(sAPValue = sAP)
library(magrittr); parameters %<>% mutate(sAPValue = sAP)
parameters
library(magrittr); parameters %<>% mutate(sAPValue = sAP, -sAP)
parameters
parameters
parameters %<>% select(everything(), -`sAP`)
paramt3ers
parameters
parameters %<>% select(-`sAP`)
parameters %<>% select(-`-sAP`)
parameters
parameters %<>% select(sAP)
parameters
glue_data(parameters, "-d R={R}", "-d muAP={muAP}", .sep = "\n")
library(tidyverse)
library(glue)
parameters <- list(
R = 1e-7,
muAP = 1e-4,
N = c(1000, 10000),
m = 0.001,
phi = 0.5,
muCD = 1e-8,
sAPValue = c(0.0625, 0.0833, 0.1, 0.1666, 0.25, 0.5),
r = 0.000001,
sCD = -0.001,
outputEveryNGenerations = 5000
) %>%
expand.grid() %>%
as_tibble()
glue_data(.sep = "\n",
.x = parameters,
"-d R={R}",
"-d muAP={muAP}",
"-d N={N}",
"-d m={m}",
"-d phi={phi}",
"-d muCD={muCD}",
"-d sAPValue={sAPValue}",
"-d r={r}",
"-d sCD={sCD}",
"-d outputEveryNGenerations={outputEveryNGenerations}"
)
parameters
glued_params <- glue_data(.sep = "\n",
.x = parameters,
"-d R={R}",
"-d muAP={muAP}",
"-d N={N}",
"-d m={m}",
"-d phi={phi}",
"-d muCD={muCD}",
"-d sAPValue={sAPValue}",
"-d r={r}",
"-d sCD={sCD}",
"-d outputEveryNGenerations={outputEveryNGenerations}"
)
glued_params
glued_params %>% str_split()
glued_params %>% str_split(n = 100)
glued_params %>% str_split(pattern = "\n", n = 100)
glued_params %>% str_split(pattern = "\n")
glued_params %>% str_split(pattern = "\n", simplify = TRUE)
glued_params %>% str_split(pattern = "\n")
glued_params %>% str_split(pattern = "\n") %>% map(paste())
glued_params %>% str_split(pattern = "\n") %>% map(paste)
glued_params %>% str_split(pattern = "\n") %>% map(paste, sep = " ")
glued_params %>% str_split(pattern = "\n") %>% map(paste, sep = "\n")
glued_params %>% str_split(pattern = "\n") %>% map(paste, collapse = "\n")
glued_params %>% str_split(pattern = "\n", n = 12)
glued_params %>% str_split(pattern = "\n", n = 6)
glued_params %>% str_split(pattern = "\n", n = 12)
glued_params %>% str_split(pattern = "\n")
glued_params
glued_params %>% str_split(pattern = "\n")
glued_params %>% str_split(pattern = "\n") %>% map(str_c)
glued_params %>% str_split(pattern = "\n") %>% map(.f = ~ str_c(.x, sep = "\n"))
glued_params %>% str_split(pattern = "\n") %>% map(.f = ~ str_c(.x, sep = "\n", collapse = "\n"))
glued_params %>% str_split(pattern = "\n") %>% map(str_c, collapse = "\n")
glued_params %>% str_split(pattern = "\n") %>% map(str_c, collapse = "\n") %>% sprintf()
glued_params %>% str_split(pattern = "\n") %>% map(str_c, collapse = "\n") %>% gettextf()
glued_params %>% str_split(pattern = "\n") %>% map(str_c, collapse = "\n")
glued_params %>% str_split(pattern = "\n") %>% map2(paste0("/tmp/test_paramFile_", 1:12), write_lines, file = .y)
glued_params %>% str_split(pattern = "\n") %>% map2(.y = paste0("/tmp/test_paramFile_", 1:12), write_lines, file = .y)
paste0("/tmp/test_paramFile_", 1:12)\
paste0("/tmp/test_paramFile_", 1:12)
glued_params %>% str_split(pattern = "\n") %>% map2(.x = ., .y = paste0("/tmp/test_paramFile_", 1:12), write_lines, file = .y)
glued_params %>% str_split(pattern = "\n") %>% map2(.x = ., .y = paste0("/tmp/test_paramFile_", 1:12), ~ write_lines(x = .x, file = .y))
tidyverse_packages()
setwd("~/code/Carson2022")
?rep
?repeat
??repeat
?"repeat"
repeat(1)
?`repeat`
repeat
1
10
repeat 2 1
repeat(2, 1)
repeat(1 10)
repeat (10 1)
repeat (print(10))
rep(print(10), 10)
rep(10, 10)
rep(system("hostname"), 10)
??getenv
Sys.getenv("slurm")
Sys.getenv("hostname")
Sys.getenv("HOST")
Sys.getenv("HOSTNAME")
system("which sbatch")
if(system("which cat")) { print("We can cat!") }
if(!system("which cat")) { print("We can cat!") }
"~/bin" %in% Sys.getenv("PATH")
"~/.bin" %in% Sys.getenv("PATH")
"~/.local/bin" %in% Sys.getenv("PATH")
Sys.getenv("PATH")
".local/bin" %in% Sys.getenv("PATH")
"*.local/bin" %in% Sys.getenv("PATH")
"/bin" %in% Sys.getenv("PATH"
)
"/usr/local/bin" %in% Sys.getenv("PATH")
"/usr/local/bin" %in% Sys.getenv("PATH") %>% str_split(":")
Sys.getenv("PATH") %>% str_split(":")
Sys.getenv("PATH") %>% str_split(":") %>% unlist()
"/usr/bin" %in% Sys.getenv("PATH") %>% str_split(":") %>% unlist()
"/usr/bin" %in% {Sys.getenv("PATH") %>% str_split(":") %>% unlist()}
"/usr/bin" %in% {Sys.getenv("PATH") %>% str_split(":")}
"/usr/bin" %in% {Sys.getenv("PATH") %>% str_split(":") %>% unlist()}
library(tidyverse)
read.table("~/sacct.log", sep = " ", header = TRUE, comment = "===")
read.table("sacct.log", sep = " ", header = TRUE, comment = "===")
read.table("sacct.log", sep = " ", header = TRUE, skip = 1)
read.table("sacct.log", sep = " ", header = TRUE)
read.table("sacct.log", sep = " ", header = TRUE, comment.char = "=")
read_fwf("sacct.log")
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------"
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------" %>% str_count()
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------" %>% str_count("-")
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------" %>% str_count("\w")
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------" %>% str_count(boundary())
"------------------------------ ------------ ---------- ------------------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---------- -------- ---------------" %>% str_count(boundary("-"))
cols_widths = c(
"------------------------------","------------",
"----------",
"-------------------",
"-------------------",
"-------------------",
"----------",
"----------",
"----------",
"----------",
"----------",
"--------",
"---------------"
) %>% str_count()
col_widths
c(
"------------------------------","------------",
"----------",
"-------------------",
"-------------------",
"-------------------",
"----------",
"----------",
"----------",
"----------",
"----------",
"--------",
"---------------"
) %>% str_count()
cols_widths <- c(
"------------------------------","------------",
"----------",
"-------------------",
"-------------------",
"-------------------",
"----------",
"----------",
"----------",
"----------",
"----------",
"--------",
"---------------"
) %>% str_count()
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = TRUE))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split()))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split(" ")))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split(" ", n = 13)))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split(" ", n = 12)))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split(" ")))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1) %>% str_split()))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1))
)
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = read_table("sacct.log", n_max = 1)))
read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log <- read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log <- read_fwf("sacct.log", comment = "-", col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log <- read_fwf("sacct.log", col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
read_fwf("sacct.log", comment = "-", col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log <- read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
problems()
sacct.log["1095"]
sacct.log[1095]
sacct.log[1095,]
read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths + 1, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths + 1, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))[1095,]
sacct.log <- read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths + 1, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log <- read_fwf("sacct.log", skip = 2, col_positions = fwf_widths(cols_widths + 1, col_names = c("JobName", "JobID", "State", "Submit", "Start", "End", "Timelimit", "Elapsed", "CPUTime", "ReqMem", "MaxVMSize", "ExitCode", "DerivedExitCode")))
sacct.log %>% mutate(Timelimit = readr::col_time(""))
sacct.log %>% mutate(Timelimit = readr::col_time())
sacct.log %>% mutate(Timelimit = readr::col_time
)
sacct.log %>% mutate(Timelimit = readr::col_time)
sacct.log %>% mutate(Timelimit = readr::col_time(Timelimit))
sacct.log %>% mutate(Timelimit = readr::parse_time(Timelimit))
sacct.log
sacct.log %>% mutate(Timelimit = readr::parse_time(format = "%d-%Y"))
sacct.log %>% mutate(Timelimit = readr::parse_time(Timelimit, format = "%d-%Y"))
sacct.log %>% mutate(Timelimit = readr::parse_time(Timelimit, format = "%d-%H:%M:%s"))
sacct.log
sacct.log %>% mutate(Timelimit = strptime(Timelimite))
sacct.log %>% mutate(Timelimit = strptime(Timelimit))
sacct.log %>% mutate(Timelimit = strptime(Timelimit, format = "%d-%H:%M:%s"))
sacct.log %>% mutate(Timelimit = strptime(Timelimit, format = "%d-%H:%M"))
sacct.log %>% mutate(Timelimit = strptime(Timelimit, format = "%H:%M"))
library(lubridate)
lubridate::is.duration("2-00:00:00")
lubridate::is.duration("12:00:00")
lubridate::as.duration("12:00:00")
as.duration
as.duration("12:00:00")
save.image("~/code/Carson2022/sacct.RData")
savehistory("~/code/Carson2022/sacct.Rhistory")
